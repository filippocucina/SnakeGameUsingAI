Pygame represents images as Surface Objects. The display.set_mode() function creates a new surface object 
that represents the actual displayed graphics. Any drawing you do to this Surface will become on the monitor.

Drawing of images is handled by the Surface.blit() method. A blit basically means copying pixel colors from one 
image to another. We pass the blit method a source Surface to copy from, and a position to place the source onto 
the destination.

Para usar Variables Constantes, debes usar la palabra reservada global
EX: 
		date = '10-07-2001'

		def get_date():
			global date
			date = '10-07-2001'

pygame.local, si importamos este modulo de pygame, lo que va a ser es colocar un set de limite de cuantas constantes y
funciones puede haber en el namespace del Script

Antes de poder usar Pygame, se debe inicializar: pygame.init.	Inicializa todos los modulos de python para ti.
No todos los modulos de python deben ser inicializados, pero esto automaticamente inicializa los que lo hagan.
Tambien puedes inicializar cada modulo de Pygame por tu cuenta a mano, asi seria un ejemplo:
	pygame.font.init()

Tenga en cuenta que si hay un error al inicializar con "pygame.init()", fallará silenciosamente.
Al inicializar manualmente módulos como este, cualquier error generará una excepción. 
Cualquier módulo que deba inicializarse también tiene una función "get_init()", que devolverá true si el módulo
se ha inicializado. Es seguro llamar a la función init() para cualquier módulo más de una vez.

Los modulos que se inicializan tienen usualmente un funcion de quit() que limpiara y quitara el codigo (por ejemplo la ventana)
No hay necesidad de llamar a las funciones de quit(), ya que pygame quitara todo una vez python haya finalizado de ejecutarse

The 3 main objects in Pygame: The Screen, The Background and the Text. Each of these objects can be created by first calling an
in-built Pygame Object, and then modifying it to fit our needs. 

The Background we create an object and then we convert ( pygame.Surface.convert() ) to a Single Pixel Format. This is more obviously
necessary when we have several images and surfaces, all of different pixel formats. Summary: One Pixel Format for everything.
By converting all the Surfaces, we can drastically speed up rendering times. 

With Text, we require more than one object. First we define a Font object, which defines which font to use, and the size of the font
Then we create a Text object, by using the render method that belongs 

